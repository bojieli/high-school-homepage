
  以学为主
   
   
   
   
   
  一方风雨
   
   
   
   
   
  文海泛舟
   
   
   
   
   
   
  心灵碰撞
   
   
   
   
   
  科技博览
   
   
   
   
   
  共同关注
   
   
   
   
   
  民族责任
   
   
   
   
   
您的位置：博杰学习网>>和谐信息港>>国软推广>>Windows是否真的无懈可击
Windows是否真的无懈可击



    很多人一直认为，微软的Windows系统“不易出错”“容易使用”，于是盲目排斥国产软件，造成了当前微软产品“一统江山”的局面，严重威胁了我国的信息安全，制约着民族软件产业的发展。
    我们首先来看一下，微软的Windows是否像某些人所说的那样“无懈可击”。
    首先进行的是“堆栈深度测试”。（环境：Windows XP SP2）
#include<stdio.h>
void stack(int n)
{ printf("%d\n",n+1);
  stack(n+1);
}
int main()
{ int n;
  stack(0);
}

    这个程序运行后，输出到130000左右（不同机型略有不同），就会出现“程序遇到错误需要关闭”，也就是说一个普通程序的堆栈深度只有130000左右。
    而在Linux下运行呢？Ubuntu 8.1.0达到了550000左右，而Redflag 7.0更是达到了760000左右。程序运行结束时，不会出现“错误关闭”的字样，而会立即终止程序，并出现“Stack Dump”的提示信息，使我们清晰地知道是由于堆栈溢出导致的错误。
    值得注意的是，我们的测试没有依赖第三方编译软件，而是直接使用C语言官方的GCC编译工具进行编译运行。13万，55万，76万，三个不同的操作系统，为什么有如此巨大的差别？原因不在编译器，在于操作系统内核的设计机理。
    众所周知，作为递归程序的重要基础，堆栈的性能是操作系统好坏的一项重要指标。由此可见，Linux在内核方面就已经远远胜过Windows，无论Windows的制造者们如何宣传“我们的代码经过多少次精心的优化”，都不能掩盖内核性能的缺陷。
    再看Windows文件系统的性能。众所周知，Windows Explorer发生“停止响应”是经常的事，尤其是文件个数众多时，更容易发生类似的问题。
    例如，我写了一个这样的批处理程序：
@echo off
for /L %%a in (1,1,1000000) do mkdir E:\信息学竞赛\程序\tools\test3\a%%aa\

    这个程序的作用是建立1000000个目录。运行后，达到65534个时，开始显示“无法创建目录”，这是由于FAT32对目录个数的限制。更为令人气愤的是，双击test3目录希望打开，结果Explorer停止响应。重新打开Explorer，右键点击test3文件夹的属性，竟然显示0个文件，0个文件夹。明明65534个文件夹，怎么统计不出来了？
    更改(1,1,1000000)到(1,1,10000)，10000个文件夹在25秒后终于建立了，可是仍然打不开、统计不出属性。这说明作为Windows重要组件之一的Explorer对于规模庞大的目录结构难以顺利处理，这也是大型服务器不采用Windows的重要原因吧。
    再看Windows递归调用进程的能力。
#include<stdio.h>
int main()
{ while(1){system("openexe.exe");}
}

    
    这样的程序运行后，只见任务管理器中的内存占用不紧不慢的增长，经过大约80秒之后，才达到峰值，这说明Windows程序调用程序的速度很慢。
    Windows最不喜欢就是这种“超负荷运转”的情况，这时它就会暴露出一系列设计上的缺陷，尤其是喜欢在Explorer上做文章：有时开始菜单的“程序”的子菜单点不动，即使关闭“占内存程序”后也不能恢复；更有甚者，“关闭计算机”按钮直接消失了。此时任务管理器也出现问题，上面的“文件”“选项”等菜单已经不可用，一点就消失；“结束进程”按钮根本用不上。这些奇怪的现象，都表明Windows在多进程处理系统上仍然存在问题。
    由此可见，层出不穷的“Explorer停止响应”，并不是Explorer本身的问题，而是Windows在内核设计时没有充分考虑到极端情况，“非正常使用”容易导致系统崩溃。
    曾经有人在网上提问，Linux中没有“磁盘碎片整理程序”，很不方便。这就显得外行了。Windows由于文件系统的特殊性，不仅不太稳定，目录树容易被破坏，还需要使用碎片整理不时保持文件的“整齐”，以免文件过分凌乱。从这个角度上说，Windows的文件处理方式是“越用越乱”。而Linux根本不需要“碎片整理”，因为它的文件系统设计时就已经尽量减少了碎片的发生，即使有碎片，也会“越用越整齐”。
    打个比方，例如整个文件系统就是一个书架，文件就是其中的书籍。Windows的方式是取出书籍，用完后不管三七二十一直接往书架上一塞，结果书架越来越乱，难以找到，每过一段时间需要图书管理员过来整理一遍；而Linux的方式则是分门别类，使用完后将其放到使书架尽可能整齐的位置，这样即使原来很凌乱，用过若干次之后自动整齐了。
    从这个“碎片整理”的小问题上，可以看出Windows和Linux在设计机理上的本质区别：Windows属于“只看眼前，不看长远”，只要现在能用就行了；Linux则是从大局出发，实施“可持续发展”。
    这样的例子还有很多。Windows越用越臃肿、无用的文件越来越多，系统的运行速度也逐渐减慢。原来C盘可能装上了所有软件才使用5GB，用上一年之后，竟然发现使用了10GB，对于操作频繁，又不善于清理垃圾、优化系统的用户，也是常有的事。
    因此很多人建议“Windows用上一年后应该重装一次”，就是为了清理“垃圾”。如果系统真的用了一年，即使使用各种优化工具，也无法回到刚装机时的状态，这是因为长时间未清理的垃圾已经深入系统内核、外表的各个角落，难以“打扫干净”了。
    而Linux存在这个问题吗？全球众多的大型网站的服务器，使用了Linux或UNIX操作系统，已经不间断的运行了5年，10年，甚至更长，谁见过它们重新安装操作系统，谁又见过这些大型服务器经过频繁的操作之后，垃圾越来越多？
    更令人啼笑皆非的是，GHOST成为Windows不可或缺的“伙伴”，因为Windows系统容易崩溃，一旦崩溃，进行一下恢复是必要的。可是看看旁边使用Linux的人，恐怕没有那么多人为Linux做一个备份镜像之类的东西吧。
    再说Windows的“等级制度”，就是用户账户安全机制。从根本上，Windows的用户账户就是一层“窗户纸”，只是在应用程序的层面上对访问安全进行限制，而没有根本上把文件保护起来。
    我曾经知道，只要开启了Guest账户，就能使用命令行创建管理员账户。一个Guest账户，可以访问注册表和组策略（如果没有禁止），还有什么事不能干？
一、创建一个批处理文件，内容如下： 
net user admin /add? net localgroup administrators admin /add 
将上述的批处理文件保存为 admin.bat. 　　 
注：上述批处理文件作用是创建一个名为 admin 的管理员帐户(密码为空)。 　　 
二、将此批处理文件作为视窗系统 的开机启动脚本。 　　 
1、在 运行 对话框中输入 gpedit.msc 　　 
2、定位到 计算机设置一>视窗系统设置一>脚本 (启动/关机), 双击右边窗口的 启动,在其中添加先前创建的 admin.bat。 　　 
3、重新启动计算机，系统便有了一个名为admin 的管理员。 

    现在突然知道，利用Windows的漏洞，可以直接获取Administrator密码！
一、利用NET命令 

我们知道在Windows XP中提供了“net user”命令，该命令可以添加、修改用户账户信息，其语法格式为： 

net user [UserName [Password | *] [options]] [/domain] 

net user [UserName {Password | *} /add [options] [/domain] 

net user [UserName [/delete] [/domain]] 

每个参数的具体含义在Windows XP帮助中已做了详细的说明，在此笔者就不多阐述了。好了，我们现在以恢复本地用户“zhangbq”口令为例，来说明解决忘记登录密码的步骤： 

1、重新启动计算机，在启动画面出现后马上按下F8键，选择“带命令行的安全模式”。 

2、运行过程结束时，系统列出了系统超级用户“administrator”和本地用户“zhangbq”的选择菜单，鼠标单击“administrator”，进入命令行模式。 

3、键入命令：“net user zhangbq 123456 /add”，强制将“zhangbq”用户的口令更改为“123456”。若想在此添加一新用户（如：用户名为abcdef，口令为123456）的话，请键入“net user abcdef 123456 /add”，添加后可用“net localgroup administrators abcdef /add”命令将用户提升为系统管理组“administrators”的用户，并使其具有超级权限。 

4、重新启动计算机，选择正常模式下运行，就可以用更改后的口令“123456”登录“zhangbq”用户了。 

二、利用“administrator” 

我们知道在安装Windows XP过程中，首先是以“administrator”默认登录，然后会要求创建一个新账户，以便进入Windows XP时使用此新建账户登录，而且在Windows XP的登录界面中也只会出现创建的这个用户账号，不会出现“administrator”，但实际上该“administrator”账号还是存在的，并且密码为空。 

当我们了解了这一点以后，假如忘记了登录密码的话，在登录界面上，按住Ctrl+Alt键，再按住Del键二次，即可出现经典的登录画面，此时在用户名处键入“administrator”，密码为空进入，然后再修改“zhangbp”的口令即可。 

    以上这些令人震惊的Windows用户管理漏洞，充分体现了Windows用户体制“纸老虎”的本质，根本不能起到保护用户私密文件的需要。
    而Linux操作系统则根本不存在这样的问题，它是从根源上堵住“越级访问”的特权，采用一套深入内核的权限管理体系保护各个用户的文件。因此只要设置得当，就很难进行“登录密码破解”。（不排除某些Linux发行版又步了Windows的后尘，例如Redhat就可以用single单用户模式利用命令行破掉root密码。）
    我们可以试想，如果Linux/UNIX没有一套严格的用户-密码体系，各种服务器就不可能稳定，攻击也会变得易如反掌，这样网站的信息安全还有什么保障？
    Windows只是通过“易用”的菜单、“人性化”的桌面打动了人心，走进了千家万户。但从内核的稳定性、运行的高效性、信息的安全性等角度考虑，Windows是无法与Linux相提并论的。
    我们郑重建议，有志于科学研究、程序设计的用户完全用Linux工作。如果只是将电脑用作一种消遣的工具，那么充满漏洞的Windows也许仍然是一种不错的选择。
　

　
版权所有 2009-04-19 博杰学习网

 